name: Lint

permissions:
  pull-requests: none

on:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: List all tracked files
        run: git ls-files

      - name: Detect Project Type
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            node:
              - '**/package.json'
            python:
              - '**/requirements.txt'
              - '**/pyproject.toml'
              - '**/setup.py'

      - name: Debug Filter Output
        run: |
          echo "Node: ${{ steps.filter.outputs.node }}"
          echo "Python: ${{ steps.filter.outputs.python }}"

      - name: Set Environment Variables
        id: set_env_vars
        run: |
          echo "NODE_PROJECT=${{ steps.filter.outputs.node }}" >> $GITHUB_ENV
          echo "PYTHON_PROJECT=${{ steps.filter.outputs.python }}" >> $GITHUB_ENV

      - name: Output Filter Results
        run: |
          echo "Node: $NODE_PROJECT, Python: $PYTHON_PROJECT"

      - name: Set up Node.js
        if: ${{ env.NODE_PROJECT == 'true' }}
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies (Node.js)
        if: ${{ env.NODE_PROJECT == 'true' }}
        run: npm install

      - name: Run ESLint (Node.js)
        if: ${{ env.NODE_PROJECT == 'true' }}
        run: npm run lint

      - name: Set up Python
        if: ${{ env.PYTHON_PROJECT == 'true' }}
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install Dependencies (Python)
        if: ${{ env.PYTHON_PROJECT == 'true' }}
        run: |
          pip install flake8

      - name: Run Flake8 (Python)
        if: ${{ env.PYTHON_PROJECT == 'true' }}
        run: |
          flake8 .

      - name: Fail if Linting Fails
        if: failure()
        run: exit 1
